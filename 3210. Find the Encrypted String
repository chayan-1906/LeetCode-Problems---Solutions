/** https://leetcode.com/problems/find-the-encrypted-string/description/
You are given a string s and an integer k. Encrypt the string using the following algorithm:

For each character c in s, replace c with the kth character after c in the string (in a cyclic manner).
Return the encrypted string.

Example 1:
Input: s = "dart", k = 3
Output: "tdar"
Explanation:
For i = 0, the 3rd character after 'd' is 't'.
For i = 1, the 3rd character after 'a' is 'd'.
For i = 2, the 3rd character after 'r' is 'a'.
For i = 3, the 3rd character after 't' is 'r'.

Example 2:
Input: s = "aaa", k = 1
Output: "aaa"
Explanation:
As all the characters are the same, the encrypted string will also be the same.
*/

Constraints:
1 <= s.length <= 100
1 <= k <= 10⁴
*/

class Solution {
    public String getEncryptedString(String s, int k) {
        k = k % s.length();
        // reverse first length - k chars
        s = reverse(s, 0, k - 1);
        System.out.println(s);

        // reverse kth element to length - 1
        s = reverse(s, k, s.length() - 1);
        System.out.println(s);

        // reverse the entire string
        s = reverse(s, 0, s.length() - 1);

        return s;
    }

    public String reverse(String s, int low, int high) {
        char[] charArray = s.toCharArray();
        while(low < high) {
            char temp = charArray[low];
            charArray[low] = charArray[high];
            charArray[high] = temp;
            low++;
            high--;
        }
        return new String(charArray);
    }
}
