/* https://leetcode.com/problems/maximum-number-of-balloons/
Given a string text, you want to use the characters of text to form as many instances of the word "balloon" as possible.
You can use each character in text at most once. Return the maximum number of instances that can be formed.

Example 1:
Input: text = "nlaebolko"
Output: 1

Example 2:
Input: text = "loonbalxballpoon"
Output: 2

Example 3:
Input: text = "leetcode"
Output: 0

Constraints:
1 <= text.length <= 10⁴
text consists of lower case English letters only.
*/

class Solution {
    public int maxNumberOfBalloons(String text) {
        HashMap<Character, Integer> hashMap = new HashMap<>();
        int balloonCount = 0;
        for (int i = 0; i < text.length(); i++) {
            char ch = text.charAt(i);
            if (ch == 'b' || ch == 'a' || ch == 'l' || ch == 'o' || ch == 'n')
                hashMap.put(text.charAt(i), hashMap.getOrDefault(text.charAt(i), 0) + 1);
        }
        while (isValidBalloon(hashMap)) {
            balloonCount++;
            hashMap.put('b', hashMap.get('b') - 1);
            hashMap.put('a', hashMap.get('a') - 1);
            hashMap.put('n', hashMap.get('n') - 1);
            hashMap.put('o', hashMap.get('o') - 2);
            hashMap.put('l', hashMap.get('l') - 2);
        }
        return balloonCount;
    }

    public static boolean isValidBalloon(HashMap<Character, Integer> hashMap) {
        boolean isValid = false;
        if (hashMap.containsKey('b') && hashMap.containsKey('a')
                && hashMap.containsKey('n') && hashMap.containsKey('l') && hashMap.containsKey('o')) {
            isValid = hashMap.get('b') >= 1 && hashMap.get('a') >= 1
                    && hashMap.get('l') >= 2 && hashMap.get('o') >= 2 && hashMap.get('n') >= 1;
        }
        return isValid;
    }
}
