/** https://leetcode.com/problems/transpose-matrix/
Given a 2D integer array matrix, return the transpose of matrix.

The transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix's row and column indices.

Example 1:
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[1,4,7],[2,5,8],[3,6,9]]

Example 2:
Input: matrix = [[1,2,3],[4,5,6]]
Output: [[1,4],[2,5],[3,6]]

Constraints:
m == matrix.length
n == matrix[i].length
1 <= m, n <= 1000
1 <= m * n <= 10⁵
-10⁹ <= matrix[i][j] <= 10⁹
*/

class Solution {
    public int[][] transpose(int[][] matrix) {
        int R = matrix.length;
        int C = matrix[0].length;
        int[][] transposeMat = new int[C][R];
        // only for square matrix
        /*for (int i = 0; i < R; i++) {
            for (int j = i; j < C; j++) matrixEleSwap(matrix, i, j);
        }*/

        for (int i = 0; i < C; i++)
            for (int j = 0; j < R; j++)
                transposeMat[i][j] = matrix[j][i];

        return transposeMat;
    }

    static void matrixEleSwap(int[][] matrix, int i, int j) {
        int temp = matrix[i][j];
        matrix[i][j] = matrix[j][i];
        matrix[j][i] = temp;
    }
}
