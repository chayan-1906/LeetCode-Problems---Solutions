/* https://leetcode.com/problems/isomorphic-strings/description/?envType=study-plan-v2&envId=top-interview-150
Given two strings s and t, determine if they are isomorphic.
Two strings s and t are isomorphic if the characters in s can be replaced to get t.
All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

Example 1:
Input: s = "egg", t = "add"
Output: true

Example 2:
Input: s = "foo", t = "bar"
Output: false

Example 3:
Input: s = "paper", t = "title"
Output: true
*/

class Solution {
    public boolean isIsomorphic(String s, String t) {
        if (s.length() != t.length()) return false;

        HashMap<Character, Character> sHashMap = new HashMap<>();
        HashMap<Character, Character> tHashMap = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            Character charS = s.charAt(i);
            Character charT = t.charAt(i);

            /* map from s to t */
            if (sHashMap.containsKey(charS)) {
                if (sHashMap.get(charS) != charT) return false;
            } else {
                sHashMap.put(charS, charT);
            }

            /* map from t to s */
            if (tHashMap.containsKey(charT)) {
                if (tHashMap.get(charT) != charS) return false;
            } else {
                tHashMap.put(charT, charS);
            }
        }

        return true;
    }
}
