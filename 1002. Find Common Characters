/* https://leetcode.com/problems/find-common-characters/
Given an array words of strings made only from lowercase letters, return a list of all characters that show up in all strings within the list (including duplicates).  For example, if a character occurs 3 times in all strings but not 4 times, you need to include that character three times in the final answer.
You may return the answer in any order.

Example 1:
Input: ["bella","label","roller"]
Output: ["e","l","l"]

Example 2:
Input: ["cool","lock","cook"]
Output: ["c","o"]

Note:
1 <= words.length <= 100
1 <= words[i].length <= 100
words[i] consists of lowercase English letters.
*/

class Solution {
    public List<String> commonChars(String[] words) {
        int[] table = new int[26];
		Arrays.fill ( table, Integer.MAX_VALUE );
		
		for (String word : words) {
			// Count the freq of chars in word
			int[] freq = new int[26];
			for (char c : word.toCharArray ())
				freq[c - 'a']++;
			// Find the minimum freq of all characters
			for (int i = 0; i < table.length; i++)
				table[i] = Math.min ( table[i], freq[i] );
		}
		List<String> list = new ArrayList<> (  );
		for (int i = 0; i < table.length; i++) {
			while (table[i] > 0) {
				list.add ( (char) ('a' + i) + "" );
				table[i]--;
			}
		}
		return list;
    }
}
