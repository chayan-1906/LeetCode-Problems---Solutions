/** 
Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.
You must write an algorithm that runs in O(n) time.

Example 1:
Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.

Example 2:
Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9

Constraints:

0 <= nums.length <= 10⁵
-10⁹ <= nums[i] <= 10⁹
*/

class Solution {
    public int longestConsecutive(int[] array) {
        HashSet<Integer> hashSet = new HashSet<> ( );
		int maxLen = 0;
		int current = 0;
		for (Integer integer : array) hashSet.add ( integer );
		for (int i = 0; i < array.length; i++) {
			if (!hashSet.contains ( array[ i ] - 1 )) {
				current = 1;
				while (hashSet.contains ( current + array[ i ] )) current++;
				maxLen = Math.max ( maxLen, current );
			}
		}
		return maxLen;
    }
}
