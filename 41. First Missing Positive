/* https://leetcode.com/problems/first-missing-positive/
Given an unsorted integer array nums, find the smallest missing positive integer.
Example 1:
Input: nums = [1,2,0]
Output: 3

Example 2:
Input: nums = [3,4,-1,1]
Output: 2

Example 3:
Input: nums = [7,8,9,11,12]
Output: 1

Constraints:
0 <= nums.length <= 300
-231 <= nums[i] <= 231 - 1
*/

class Solution {
    public int firstMissingPositive(int[] nums) {
                int length = nums.length;
        int smallest = 1;
        for (int i = 0; i < length; i++)
            for (int j = 0; j < length; j++)
                if (nums[ j ] == smallest)
                    smallest++;
        return smallest;
    }
}

class Solution {
    public int firstMissingPositive(int[] arr) {
        Arrays.sort ( arr );
		LinkedHashSet<Integer> hashSet = new LinkedHashSet<> ( );
		for (int integer : arr) {
			if (integer > 0) hashSet.add ( integer );
		}
		for (int i = 0; i < hashSet.size ( ); i++) {
			if (!hashSet.contains ( i + 1 )) return i + 1;
		}
		return hashSet.size ( ) + 1;
    }
}
