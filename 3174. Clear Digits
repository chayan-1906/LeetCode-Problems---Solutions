/** https://leetcode.com/problems/clear-digits/description/
You are given a string s.
Your task is to remove all digits by doing this operation repeatedly:
Delete the first digit and the closest non-digit character to its left.
Return the resulting string after removing all digits.

Example 1:
Input: s = "abc"
Output: "abc"
Explanation:
There is no digit in the string.

Example 2:
Input: s = "cb34
Output: ""
Explanation:
First, we apply the operation on s[2], and s becomes "c4".
Then we apply the operation on s[1], and s becomes "".

Constraints:
1 <= s.length <= 100
s consists only of lowercase English letters and digits.
The input is generated such that it is possible to delete all digits.
*/

class Solution {
    public String clearDigits(String s) {
        StringBuilder sb = new StringBuilder(s);
        while (true) {
            int firstDigitIndex = -1;
            int closestNonDigitIndex = -1;
            for (int i = 0; i < sb.length(); i++) {
                if (Character.isDigit(sb.charAt(i))) {
                    firstDigitIndex = i;
                    break;
                }
            }

            if (firstDigitIndex == -1) break;

            for (int i = firstDigitIndex - 1; i >= 0; i--) {
                if (!Character.isDigit(sb.charAt(i))) {
                    closestNonDigitIndex = i;
                    break;
                }
            }

            sb.deleteCharAt(firstDigitIndex);
            sb.deleteCharAt(closestNonDigitIndex);
        }
        return sb.toString();
    }
}
