/* https://leetcode.com/problems/contains-duplicate-ii/
Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.

Example 1:
Input: nums = [1,2,3,1], k = 3
Output: true

Example 2:
Input: nums = [1,0,1,1], k = 1
Output: true

Example 3:
Input: nums = [1,2,3,1,2,3], k = 2
Output: false

Constraints:
1 <= nums.length <= 10^5
-10^9 <= nums[i] <= 10^9
0 <= k <= 105
*/

class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        if (nums==null || nums.length < 2 || k==0)
			return false;
		int count = 0;
		Set<Integer> integerHashSet = new HashSet<> (  );
		for (int num : nums) {
			if (!integerHashSet.add ( num ))
				return true;
			if (integerHashSet.size ( ) >= k + 1)
				integerHashSet.remove ( nums[ count++ ] );
		}
		return false;
    }
}
